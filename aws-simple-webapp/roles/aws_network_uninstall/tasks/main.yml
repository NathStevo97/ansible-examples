---
# tasks file for aws_network_uninstall
  - name: Get Info of the VPCs
    amazon.aws.ec2_vpc_net_info:
      profile: "{{ aws_profile }}"
      filters:
        "tag:Name": "{{ resource_name_prefix }}-vpc"
    register: ansibleVPC

  - name: debug VPC
    debug:
      var: ansibleVPC

  - name: Get info of public subnet
    amazon.aws.ec2_vpc_subnet_info:
      filters:
        vpc-id: "{{ ansibleVPC.vpcs[0].id }}"
    register: public_subnet

  - name: debug VPC Subnet Info
    debug:
      var: public_subnet

  - name: Get Gateway Info
    amazon.aws.ec2_vpc_igw_info:
      region: "{{ aws_region }}"
      filters:
        attachment.vpc-id: "{{ ansibleVPC.vpcs[0].id }}"
    register: ansibleVPC_igw

  - name: debug VPC Subnet Info
    debug:
      var: ansibleVPC_igw


  - name: Remove Security Group
    ec2_group:
      #aws_access_key: "{{ aws_access_key }}"
      #aws_secret_key: "{{ aws_secret_key }}"
      profile: "{{ aws_profile }}"
      region: "{{ aws_region }}"
      name: "{{ resource_name_prefix }}-sg"
      description: "Test Security Group"
      state: absent
      vpc_id: "{{ ansibleVPC.vpcs[0].id }}"
      tags:
        name: "{{ resource_name_prefix }}-sg"
      rules:
      - proto: "tcp"
        ports: "22"
        cidr_ip: 0.0.0.0/0

  - name: Remove Public Subnet Route Table
    ec2_vpc_route_table:
      #aws_access_key: "{{ aws_access_key }}"
      #aws_secret_key: "{{ aws_secret_key }}"
      profile: "{{ aws_profile }}"
      region: "{{ aws_region }}"
      #name: "{{ resource_name_prefix }}-rt"
      state: absent
      vpc_id: "{{ ansibleVPC.vpcs[0].id }}"
      tags:
        name: "{{ resource_name_prefix }}-rt"
      subnets:
      - "{{ public_subnet.subnets[0].id }}"
      routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ ansibleVPC_igw.internet_gateways[0].internet_gateway_id }}"
    register: rt_ansibleVPC_PublicSubnet

  - name: display public route table
    debug:
      var: rt_ansibleVPC_PublicSubnet

  - name: Remove the Public Subnet
    ec2_vpc_subnet:
      #aws_access_key: "{{ aws_access_key }}"
      #aws_secret_key: "{{ aws_secret_key }}"
      profile: "{{ aws_profile }}"
      region: "{{ aws_region }}"
      #name: "{{ resource_name_prefix }}-public_subnet"
      state: absent
      cidr: 10.10.0.0/16
      vpc_id: "{{ ansibleVPC.vpcs[0].id }}"
      map_public: yes
      tags:
        name: "{{ resource_name_prefix }}-public_subnet"
    register: public_subnet

  - name: Remove the Internet Gateway
    ec2_vpc_igw:
      #aws_access_key: "{{ aws_access_key }}"
      #aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ aws_region }}"
      profile: "{{ aws_profile }}"
      #name: "{{ resource_name_prefix }}-igw"
      state: absent
      vpc_id: "{{ ansibleVPC.vpcs[0].id }}"
      tags:
        name: "{{ resource_name_prefix }}-igw"
    register: ansibleVPC_igw

  - name: Remove the VPC
    ec2_vpc_net:
      #aws_access_key: "{{ AWS_ACCESS_KEY }}"
      #aws_secret_key: "{{ AWS_SECRET_KEY }}"
      region: "{{ aws_region }}"
      profile: "{{ aws_profile }}"
      name:  "{{ resource_name_prefix }}-vpc"
      cidr_block: 10.10.0.0/16
      state: absent
      tags:
        module: ec2_vpc_net
        name: "{{ resource_name_prefix }}-vpc"
      tenancy: default
    register: ansibleVPC